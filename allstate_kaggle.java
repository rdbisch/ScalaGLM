/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.rbisd.glm;  
@SuppressWarnings("all")
/** Kaggle Allstate */
@org.apache.avro.specific.AvroGenerated
public class allstate_kaggle extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"allstate_kaggle\",\"namespace\":\"org.rbisd.glm\",\"doc\":\"Kaggle Allstate\",\"fields\":[{\"name\":\"Row_ID\",\"type\":\"long\"},{\"name\":\"Household_ID\",\"type\":\"long\"},{\"name\":\"Vehicle\",\"type\":\"long\"},{\"name\":\"Calendar_Year\",\"type\":\"int\"},{\"name\":\"Model_Year\",\"type\":\"int\"},{\"name\":\"Blind_Make\",\"type\":\"string\"},{\"name\":\"Blind_Model\",\"type\":\"string\"},{\"name\":\"Blind_Submodel\",\"type\":\"string\"},{\"name\":\"Cat1\",\"type\":\"string\"},{\"name\":\"Cat2\",\"type\":\"string\"},{\"name\":\"Cat3\",\"type\":\"string\"},{\"name\":\"Cat4\",\"type\":\"string\"},{\"name\":\"Cat5\",\"type\":\"string\"},{\"name\":\"Cat6\",\"type\":\"string\"},{\"name\":\"Cat7\",\"type\":\"string\"},{\"name\":\"Cat8\",\"type\":\"string\"},{\"name\":\"Cat9\",\"type\":\"string\"},{\"name\":\"Cat10\",\"type\":\"string\"},{\"name\":\"Cat11\",\"type\":\"string\"},{\"name\":\"Cat12\",\"type\":\"string\"},{\"name\":\"OrdCat\",\"type\":\"int\"},{\"name\":\"Var1\",\"type\":\"double\"},{\"name\":\"Var2\",\"type\":\"double\"},{\"name\":\"Var3\",\"type\":\"double\"},{\"name\":\"Var4\",\"type\":\"double\"},{\"name\":\"Var5\",\"type\":\"double\"},{\"name\":\"Var6\",\"type\":\"double\"},{\"name\":\"Var7\",\"type\":\"double\"},{\"name\":\"Var8\",\"type\":\"double\"},{\"name\":\"NVCat\",\"type\":\"string\"},{\"name\":\"NVVar1\",\"type\":\"double\"},{\"name\":\"NVVar2\",\"type\":\"double\"},{\"name\":\"NVVar3\",\"type\":\"double\"},{\"name\":\"NVVar4\",\"type\":\"double\"},{\"name\":\"Claim_Amount\",\"type\":\"double\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public long Row_ID;
  @Deprecated public long Household_ID;
  @Deprecated public long Vehicle;
  @Deprecated public int Calendar_Year;
  @Deprecated public int Model_Year;
  @Deprecated public java.lang.CharSequence Blind_Make;
  @Deprecated public java.lang.CharSequence Blind_Model;
  @Deprecated public java.lang.CharSequence Blind_Submodel;
  @Deprecated public java.lang.CharSequence Cat1;
  @Deprecated public java.lang.CharSequence Cat2;
  @Deprecated public java.lang.CharSequence Cat3;
  @Deprecated public java.lang.CharSequence Cat4;
  @Deprecated public java.lang.CharSequence Cat5;
  @Deprecated public java.lang.CharSequence Cat6;
  @Deprecated public java.lang.CharSequence Cat7;
  @Deprecated public java.lang.CharSequence Cat8;
  @Deprecated public java.lang.CharSequence Cat9;
  @Deprecated public java.lang.CharSequence Cat10;
  @Deprecated public java.lang.CharSequence Cat11;
  @Deprecated public java.lang.CharSequence Cat12;
  @Deprecated public int OrdCat;
  @Deprecated public double Var1;
  @Deprecated public double Var2;
  @Deprecated public double Var3;
  @Deprecated public double Var4;
  @Deprecated public double Var5;
  @Deprecated public double Var6;
  @Deprecated public double Var7;
  @Deprecated public double Var8;
  @Deprecated public java.lang.CharSequence NVCat;
  @Deprecated public double NVVar1;
  @Deprecated public double NVVar2;
  @Deprecated public double NVVar3;
  @Deprecated public double NVVar4;
  @Deprecated public double Claim_Amount;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public allstate_kaggle() {}

  /**
   * All-args constructor.
   */
  public allstate_kaggle(java.lang.Long Row_ID, java.lang.Long Household_ID, java.lang.Long Vehicle, java.lang.Integer Calendar_Year, java.lang.Integer Model_Year, java.lang.CharSequence Blind_Make, java.lang.CharSequence Blind_Model, java.lang.CharSequence Blind_Submodel, java.lang.CharSequence Cat1, java.lang.CharSequence Cat2, java.lang.CharSequence Cat3, java.lang.CharSequence Cat4, java.lang.CharSequence Cat5, java.lang.CharSequence Cat6, java.lang.CharSequence Cat7, java.lang.CharSequence Cat8, java.lang.CharSequence Cat9, java.lang.CharSequence Cat10, java.lang.CharSequence Cat11, java.lang.CharSequence Cat12, java.lang.Integer OrdCat, java.lang.Double Var1, java.lang.Double Var2, java.lang.Double Var3, java.lang.Double Var4, java.lang.Double Var5, java.lang.Double Var6, java.lang.Double Var7, java.lang.Double Var8, java.lang.CharSequence NVCat, java.lang.Double NVVar1, java.lang.Double NVVar2, java.lang.Double NVVar3, java.lang.Double NVVar4, java.lang.Double Claim_Amount) {
    this.Row_ID = Row_ID;
    this.Household_ID = Household_ID;
    this.Vehicle = Vehicle;
    this.Calendar_Year = Calendar_Year;
    this.Model_Year = Model_Year;
    this.Blind_Make = Blind_Make;
    this.Blind_Model = Blind_Model;
    this.Blind_Submodel = Blind_Submodel;
    this.Cat1 = Cat1;
    this.Cat2 = Cat2;
    this.Cat3 = Cat3;
    this.Cat4 = Cat4;
    this.Cat5 = Cat5;
    this.Cat6 = Cat6;
    this.Cat7 = Cat7;
    this.Cat8 = Cat8;
    this.Cat9 = Cat9;
    this.Cat10 = Cat10;
    this.Cat11 = Cat11;
    this.Cat12 = Cat12;
    this.OrdCat = OrdCat;
    this.Var1 = Var1;
    this.Var2 = Var2;
    this.Var3 = Var3;
    this.Var4 = Var4;
    this.Var5 = Var5;
    this.Var6 = Var6;
    this.Var7 = Var7;
    this.Var8 = Var8;
    this.NVCat = NVCat;
    this.NVVar1 = NVVar1;
    this.NVVar2 = NVVar2;
    this.NVVar3 = NVVar3;
    this.NVVar4 = NVVar4;
    this.Claim_Amount = Claim_Amount;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return Row_ID;
    case 1: return Household_ID;
    case 2: return Vehicle;
    case 3: return Calendar_Year;
    case 4: return Model_Year;
    case 5: return Blind_Make;
    case 6: return Blind_Model;
    case 7: return Blind_Submodel;
    case 8: return Cat1;
    case 9: return Cat2;
    case 10: return Cat3;
    case 11: return Cat4;
    case 12: return Cat5;
    case 13: return Cat6;
    case 14: return Cat7;
    case 15: return Cat8;
    case 16: return Cat9;
    case 17: return Cat10;
    case 18: return Cat11;
    case 19: return Cat12;
    case 20: return OrdCat;
    case 21: return Var1;
    case 22: return Var2;
    case 23: return Var3;
    case 24: return Var4;
    case 25: return Var5;
    case 26: return Var6;
    case 27: return Var7;
    case 28: return Var8;
    case 29: return NVCat;
    case 30: return NVVar1;
    case 31: return NVVar2;
    case 32: return NVVar3;
    case 33: return NVVar4;
    case 34: return Claim_Amount;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: Row_ID = (java.lang.Long)value$; break;
    case 1: Household_ID = (java.lang.Long)value$; break;
    case 2: Vehicle = (java.lang.Long)value$; break;
    case 3: Calendar_Year = (java.lang.Integer)value$; break;
    case 4: Model_Year = (java.lang.Integer)value$; break;
    case 5: Blind_Make = (java.lang.CharSequence)value$; break;
    case 6: Blind_Model = (java.lang.CharSequence)value$; break;
    case 7: Blind_Submodel = (java.lang.CharSequence)value$; break;
    case 8: Cat1 = (java.lang.CharSequence)value$; break;
    case 9: Cat2 = (java.lang.CharSequence)value$; break;
    case 10: Cat3 = (java.lang.CharSequence)value$; break;
    case 11: Cat4 = (java.lang.CharSequence)value$; break;
    case 12: Cat5 = (java.lang.CharSequence)value$; break;
    case 13: Cat6 = (java.lang.CharSequence)value$; break;
    case 14: Cat7 = (java.lang.CharSequence)value$; break;
    case 15: Cat8 = (java.lang.CharSequence)value$; break;
    case 16: Cat9 = (java.lang.CharSequence)value$; break;
    case 17: Cat10 = (java.lang.CharSequence)value$; break;
    case 18: Cat11 = (java.lang.CharSequence)value$; break;
    case 19: Cat12 = (java.lang.CharSequence)value$; break;
    case 20: OrdCat = (java.lang.Integer)value$; break;
    case 21: Var1 = (java.lang.Double)value$; break;
    case 22: Var2 = (java.lang.Double)value$; break;
    case 23: Var3 = (java.lang.Double)value$; break;
    case 24: Var4 = (java.lang.Double)value$; break;
    case 25: Var5 = (java.lang.Double)value$; break;
    case 26: Var6 = (java.lang.Double)value$; break;
    case 27: Var7 = (java.lang.Double)value$; break;
    case 28: Var8 = (java.lang.Double)value$; break;
    case 29: NVCat = (java.lang.CharSequence)value$; break;
    case 30: NVVar1 = (java.lang.Double)value$; break;
    case 31: NVVar2 = (java.lang.Double)value$; break;
    case 32: NVVar3 = (java.lang.Double)value$; break;
    case 33: NVVar4 = (java.lang.Double)value$; break;
    case 34: Claim_Amount = (java.lang.Double)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'Row_ID' field.
   */
  public java.lang.Long getRowID() {
    return Row_ID;
  }

  /**
   * Sets the value of the 'Row_ID' field.
   * @param value the value to set.
   */
  public void setRowID(java.lang.Long value) {
    this.Row_ID = value;
  }

  /**
   * Gets the value of the 'Household_ID' field.
   */
  public java.lang.Long getHouseholdID() {
    return Household_ID;
  }

  /**
   * Sets the value of the 'Household_ID' field.
   * @param value the value to set.
   */
  public void setHouseholdID(java.lang.Long value) {
    this.Household_ID = value;
  }

  /**
   * Gets the value of the 'Vehicle' field.
   */
  public java.lang.Long getVehicle() {
    return Vehicle;
  }

  /**
   * Sets the value of the 'Vehicle' field.
   * @param value the value to set.
   */
  public void setVehicle(java.lang.Long value) {
    this.Vehicle = value;
  }

  /**
   * Gets the value of the 'Calendar_Year' field.
   */
  public java.lang.Integer getCalendarYear() {
    return Calendar_Year;
  }

  /**
   * Sets the value of the 'Calendar_Year' field.
   * @param value the value to set.
   */
  public void setCalendarYear(java.lang.Integer value) {
    this.Calendar_Year = value;
  }

  /**
   * Gets the value of the 'Model_Year' field.
   */
  public java.lang.Integer getModelYear() {
    return Model_Year;
  }

  /**
   * Sets the value of the 'Model_Year' field.
   * @param value the value to set.
   */
  public void setModelYear(java.lang.Integer value) {
    this.Model_Year = value;
  }

  /**
   * Gets the value of the 'Blind_Make' field.
   */
  public java.lang.CharSequence getBlindMake() {
    return Blind_Make;
  }

  /**
   * Sets the value of the 'Blind_Make' field.
   * @param value the value to set.
   */
  public void setBlindMake(java.lang.CharSequence value) {
    this.Blind_Make = value;
  }

  /**
   * Gets the value of the 'Blind_Model' field.
   */
  public java.lang.CharSequence getBlindModel() {
    return Blind_Model;
  }

  /**
   * Sets the value of the 'Blind_Model' field.
   * @param value the value to set.
   */
  public void setBlindModel(java.lang.CharSequence value) {
    this.Blind_Model = value;
  }

  /**
   * Gets the value of the 'Blind_Submodel' field.
   */
  public java.lang.CharSequence getBlindSubmodel() {
    return Blind_Submodel;
  }

  /**
   * Sets the value of the 'Blind_Submodel' field.
   * @param value the value to set.
   */
  public void setBlindSubmodel(java.lang.CharSequence value) {
    this.Blind_Submodel = value;
  }

  /**
   * Gets the value of the 'Cat1' field.
   */
  public java.lang.CharSequence getCat1() {
    return Cat1;
  }

  /**
   * Sets the value of the 'Cat1' field.
   * @param value the value to set.
   */
  public void setCat1(java.lang.CharSequence value) {
    this.Cat1 = value;
  }

  /**
   * Gets the value of the 'Cat2' field.
   */
  public java.lang.CharSequence getCat2() {
    return Cat2;
  }

  /**
   * Sets the value of the 'Cat2' field.
   * @param value the value to set.
   */
  public void setCat2(java.lang.CharSequence value) {
    this.Cat2 = value;
  }

  /**
   * Gets the value of the 'Cat3' field.
   */
  public java.lang.CharSequence getCat3() {
    return Cat3;
  }

  /**
   * Sets the value of the 'Cat3' field.
   * @param value the value to set.
   */
  public void setCat3(java.lang.CharSequence value) {
    this.Cat3 = value;
  }

  /**
   * Gets the value of the 'Cat4' field.
   */
  public java.lang.CharSequence getCat4() {
    return Cat4;
  }

  /**
   * Sets the value of the 'Cat4' field.
   * @param value the value to set.
   */
  public void setCat4(java.lang.CharSequence value) {
    this.Cat4 = value;
  }

  /**
   * Gets the value of the 'Cat5' field.
   */
  public java.lang.CharSequence getCat5() {
    return Cat5;
  }

  /**
   * Sets the value of the 'Cat5' field.
   * @param value the value to set.
   */
  public void setCat5(java.lang.CharSequence value) {
    this.Cat5 = value;
  }

  /**
   * Gets the value of the 'Cat6' field.
   */
  public java.lang.CharSequence getCat6() {
    return Cat6;
  }

  /**
   * Sets the value of the 'Cat6' field.
   * @param value the value to set.
   */
  public void setCat6(java.lang.CharSequence value) {
    this.Cat6 = value;
  }

  /**
   * Gets the value of the 'Cat7' field.
   */
  public java.lang.CharSequence getCat7() {
    return Cat7;
  }

  /**
   * Sets the value of the 'Cat7' field.
   * @param value the value to set.
   */
  public void setCat7(java.lang.CharSequence value) {
    this.Cat7 = value;
  }

  /**
   * Gets the value of the 'Cat8' field.
   */
  public java.lang.CharSequence getCat8() {
    return Cat8;
  }

  /**
   * Sets the value of the 'Cat8' field.
   * @param value the value to set.
   */
  public void setCat8(java.lang.CharSequence value) {
    this.Cat8 = value;
  }

  /**
   * Gets the value of the 'Cat9' field.
   */
  public java.lang.CharSequence getCat9() {
    return Cat9;
  }

  /**
   * Sets the value of the 'Cat9' field.
   * @param value the value to set.
   */
  public void setCat9(java.lang.CharSequence value) {
    this.Cat9 = value;
  }

  /**
   * Gets the value of the 'Cat10' field.
   */
  public java.lang.CharSequence getCat10() {
    return Cat10;
  }

  /**
   * Sets the value of the 'Cat10' field.
   * @param value the value to set.
   */
  public void setCat10(java.lang.CharSequence value) {
    this.Cat10 = value;
  }

  /**
   * Gets the value of the 'Cat11' field.
   */
  public java.lang.CharSequence getCat11() {
    return Cat11;
  }

  /**
   * Sets the value of the 'Cat11' field.
   * @param value the value to set.
   */
  public void setCat11(java.lang.CharSequence value) {
    this.Cat11 = value;
  }

  /**
   * Gets the value of the 'Cat12' field.
   */
  public java.lang.CharSequence getCat12() {
    return Cat12;
  }

  /**
   * Sets the value of the 'Cat12' field.
   * @param value the value to set.
   */
  public void setCat12(java.lang.CharSequence value) {
    this.Cat12 = value;
  }

  /**
   * Gets the value of the 'OrdCat' field.
   */
  public java.lang.Integer getOrdCat() {
    return OrdCat;
  }

  /**
   * Sets the value of the 'OrdCat' field.
   * @param value the value to set.
   */
  public void setOrdCat(java.lang.Integer value) {
    this.OrdCat = value;
  }

  /**
   * Gets the value of the 'Var1' field.
   */
  public java.lang.Double getVar1() {
    return Var1;
  }

  /**
   * Sets the value of the 'Var1' field.
   * @param value the value to set.
   */
  public void setVar1(java.lang.Double value) {
    this.Var1 = value;
  }

  /**
   * Gets the value of the 'Var2' field.
   */
  public java.lang.Double getVar2() {
    return Var2;
  }

  /**
   * Sets the value of the 'Var2' field.
   * @param value the value to set.
   */
  public void setVar2(java.lang.Double value) {
    this.Var2 = value;
  }

  /**
   * Gets the value of the 'Var3' field.
   */
  public java.lang.Double getVar3() {
    return Var3;
  }

  /**
   * Sets the value of the 'Var3' field.
   * @param value the value to set.
   */
  public void setVar3(java.lang.Double value) {
    this.Var3 = value;
  }

  /**
   * Gets the value of the 'Var4' field.
   */
  public java.lang.Double getVar4() {
    return Var4;
  }

  /**
   * Sets the value of the 'Var4' field.
   * @param value the value to set.
   */
  public void setVar4(java.lang.Double value) {
    this.Var4 = value;
  }

  /**
   * Gets the value of the 'Var5' field.
   */
  public java.lang.Double getVar5() {
    return Var5;
  }

  /**
   * Sets the value of the 'Var5' field.
   * @param value the value to set.
   */
  public void setVar5(java.lang.Double value) {
    this.Var5 = value;
  }

  /**
   * Gets the value of the 'Var6' field.
   */
  public java.lang.Double getVar6() {
    return Var6;
  }

  /**
   * Sets the value of the 'Var6' field.
   * @param value the value to set.
   */
  public void setVar6(java.lang.Double value) {
    this.Var6 = value;
  }

  /**
   * Gets the value of the 'Var7' field.
   */
  public java.lang.Double getVar7() {
    return Var7;
  }

  /**
   * Sets the value of the 'Var7' field.
   * @param value the value to set.
   */
  public void setVar7(java.lang.Double value) {
    this.Var7 = value;
  }

  /**
   * Gets the value of the 'Var8' field.
   */
  public java.lang.Double getVar8() {
    return Var8;
  }

  /**
   * Sets the value of the 'Var8' field.
   * @param value the value to set.
   */
  public void setVar8(java.lang.Double value) {
    this.Var8 = value;
  }

  /**
   * Gets the value of the 'NVCat' field.
   */
  public java.lang.CharSequence getNVCat() {
    return NVCat;
  }

  /**
   * Sets the value of the 'NVCat' field.
   * @param value the value to set.
   */
  public void setNVCat(java.lang.CharSequence value) {
    this.NVCat = value;
  }

  /**
   * Gets the value of the 'NVVar1' field.
   */
  public java.lang.Double getNVVar1() {
    return NVVar1;
  }

  /**
   * Sets the value of the 'NVVar1' field.
   * @param value the value to set.
   */
  public void setNVVar1(java.lang.Double value) {
    this.NVVar1 = value;
  }

  /**
   * Gets the value of the 'NVVar2' field.
   */
  public java.lang.Double getNVVar2() {
    return NVVar2;
  }

  /**
   * Sets the value of the 'NVVar2' field.
   * @param value the value to set.
   */
  public void setNVVar2(java.lang.Double value) {
    this.NVVar2 = value;
  }

  /**
   * Gets the value of the 'NVVar3' field.
   */
  public java.lang.Double getNVVar3() {
    return NVVar3;
  }

  /**
   * Sets the value of the 'NVVar3' field.
   * @param value the value to set.
   */
  public void setNVVar3(java.lang.Double value) {
    this.NVVar3 = value;
  }

  /**
   * Gets the value of the 'NVVar4' field.
   */
  public java.lang.Double getNVVar4() {
    return NVVar4;
  }

  /**
   * Sets the value of the 'NVVar4' field.
   * @param value the value to set.
   */
  public void setNVVar4(java.lang.Double value) {
    this.NVVar4 = value;
  }

  /**
   * Gets the value of the 'Claim_Amount' field.
   */
  public java.lang.Double getClaimAmount() {
    return Claim_Amount;
  }

  /**
   * Sets the value of the 'Claim_Amount' field.
   * @param value the value to set.
   */
  public void setClaimAmount(java.lang.Double value) {
    this.Claim_Amount = value;
  }

  /** Creates a new allstate_kaggle RecordBuilder */
  public static org.rbisd.glm.allstate_kaggle.Builder newBuilder() {
    return new org.rbisd.glm.allstate_kaggle.Builder();
  }
  
  /** Creates a new allstate_kaggle RecordBuilder by copying an existing Builder */
  public static org.rbisd.glm.allstate_kaggle.Builder newBuilder(org.rbisd.glm.allstate_kaggle.Builder other) {
    return new org.rbisd.glm.allstate_kaggle.Builder(other);
  }
  
  /** Creates a new allstate_kaggle RecordBuilder by copying an existing allstate_kaggle instance */
  public static org.rbisd.glm.allstate_kaggle.Builder newBuilder(org.rbisd.glm.allstate_kaggle other) {
    return new org.rbisd.glm.allstate_kaggle.Builder(other);
  }
  
  /**
   * RecordBuilder for allstate_kaggle instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<allstate_kaggle>
    implements org.apache.avro.data.RecordBuilder<allstate_kaggle> {

    private long Row_ID;
    private long Household_ID;
    private long Vehicle;
    private int Calendar_Year;
    private int Model_Year;
    private java.lang.CharSequence Blind_Make;
    private java.lang.CharSequence Blind_Model;
    private java.lang.CharSequence Blind_Submodel;
    private java.lang.CharSequence Cat1;
    private java.lang.CharSequence Cat2;
    private java.lang.CharSequence Cat3;
    private java.lang.CharSequence Cat4;
    private java.lang.CharSequence Cat5;
    private java.lang.CharSequence Cat6;
    private java.lang.CharSequence Cat7;
    private java.lang.CharSequence Cat8;
    private java.lang.CharSequence Cat9;
    private java.lang.CharSequence Cat10;
    private java.lang.CharSequence Cat11;
    private java.lang.CharSequence Cat12;
    private int OrdCat;
    private double Var1;
    private double Var2;
    private double Var3;
    private double Var4;
    private double Var5;
    private double Var6;
    private double Var7;
    private double Var8;
    private java.lang.CharSequence NVCat;
    private double NVVar1;
    private double NVVar2;
    private double NVVar3;
    private double NVVar4;
    private double Claim_Amount;

    /** Creates a new Builder */
    private Builder() {
      super(org.rbisd.glm.allstate_kaggle.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.rbisd.glm.allstate_kaggle.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.Row_ID)) {
        this.Row_ID = data().deepCopy(fields()[0].schema(), other.Row_ID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Household_ID)) {
        this.Household_ID = data().deepCopy(fields()[1].schema(), other.Household_ID);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.Vehicle)) {
        this.Vehicle = data().deepCopy(fields()[2].schema(), other.Vehicle);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.Calendar_Year)) {
        this.Calendar_Year = data().deepCopy(fields()[3].schema(), other.Calendar_Year);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.Model_Year)) {
        this.Model_Year = data().deepCopy(fields()[4].schema(), other.Model_Year);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.Blind_Make)) {
        this.Blind_Make = data().deepCopy(fields()[5].schema(), other.Blind_Make);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.Blind_Model)) {
        this.Blind_Model = data().deepCopy(fields()[6].schema(), other.Blind_Model);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.Blind_Submodel)) {
        this.Blind_Submodel = data().deepCopy(fields()[7].schema(), other.Blind_Submodel);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.Cat1)) {
        this.Cat1 = data().deepCopy(fields()[8].schema(), other.Cat1);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.Cat2)) {
        this.Cat2 = data().deepCopy(fields()[9].schema(), other.Cat2);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.Cat3)) {
        this.Cat3 = data().deepCopy(fields()[10].schema(), other.Cat3);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.Cat4)) {
        this.Cat4 = data().deepCopy(fields()[11].schema(), other.Cat4);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.Cat5)) {
        this.Cat5 = data().deepCopy(fields()[12].schema(), other.Cat5);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.Cat6)) {
        this.Cat6 = data().deepCopy(fields()[13].schema(), other.Cat6);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.Cat7)) {
        this.Cat7 = data().deepCopy(fields()[14].schema(), other.Cat7);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.Cat8)) {
        this.Cat8 = data().deepCopy(fields()[15].schema(), other.Cat8);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.Cat9)) {
        this.Cat9 = data().deepCopy(fields()[16].schema(), other.Cat9);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.Cat10)) {
        this.Cat10 = data().deepCopy(fields()[17].schema(), other.Cat10);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.Cat11)) {
        this.Cat11 = data().deepCopy(fields()[18].schema(), other.Cat11);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.Cat12)) {
        this.Cat12 = data().deepCopy(fields()[19].schema(), other.Cat12);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.OrdCat)) {
        this.OrdCat = data().deepCopy(fields()[20].schema(), other.OrdCat);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.Var1)) {
        this.Var1 = data().deepCopy(fields()[21].schema(), other.Var1);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.Var2)) {
        this.Var2 = data().deepCopy(fields()[22].schema(), other.Var2);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.Var3)) {
        this.Var3 = data().deepCopy(fields()[23].schema(), other.Var3);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.Var4)) {
        this.Var4 = data().deepCopy(fields()[24].schema(), other.Var4);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.Var5)) {
        this.Var5 = data().deepCopy(fields()[25].schema(), other.Var5);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.Var6)) {
        this.Var6 = data().deepCopy(fields()[26].schema(), other.Var6);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.Var7)) {
        this.Var7 = data().deepCopy(fields()[27].schema(), other.Var7);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.Var8)) {
        this.Var8 = data().deepCopy(fields()[28].schema(), other.Var8);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.NVCat)) {
        this.NVCat = data().deepCopy(fields()[29].schema(), other.NVCat);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.NVVar1)) {
        this.NVVar1 = data().deepCopy(fields()[30].schema(), other.NVVar1);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.NVVar2)) {
        this.NVVar2 = data().deepCopy(fields()[31].schema(), other.NVVar2);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.NVVar3)) {
        this.NVVar3 = data().deepCopy(fields()[32].schema(), other.NVVar3);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.NVVar4)) {
        this.NVVar4 = data().deepCopy(fields()[33].schema(), other.NVVar4);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.Claim_Amount)) {
        this.Claim_Amount = data().deepCopy(fields()[34].schema(), other.Claim_Amount);
        fieldSetFlags()[34] = true;
      }
    }
    
    /** Creates a Builder by copying an existing allstate_kaggle instance */
    private Builder(org.rbisd.glm.allstate_kaggle other) {
            super(org.rbisd.glm.allstate_kaggle.SCHEMA$);
      if (isValidValue(fields()[0], other.Row_ID)) {
        this.Row_ID = data().deepCopy(fields()[0].schema(), other.Row_ID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Household_ID)) {
        this.Household_ID = data().deepCopy(fields()[1].schema(), other.Household_ID);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.Vehicle)) {
        this.Vehicle = data().deepCopy(fields()[2].schema(), other.Vehicle);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.Calendar_Year)) {
        this.Calendar_Year = data().deepCopy(fields()[3].schema(), other.Calendar_Year);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.Model_Year)) {
        this.Model_Year = data().deepCopy(fields()[4].schema(), other.Model_Year);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.Blind_Make)) {
        this.Blind_Make = data().deepCopy(fields()[5].schema(), other.Blind_Make);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.Blind_Model)) {
        this.Blind_Model = data().deepCopy(fields()[6].schema(), other.Blind_Model);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.Blind_Submodel)) {
        this.Blind_Submodel = data().deepCopy(fields()[7].schema(), other.Blind_Submodel);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.Cat1)) {
        this.Cat1 = data().deepCopy(fields()[8].schema(), other.Cat1);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.Cat2)) {
        this.Cat2 = data().deepCopy(fields()[9].schema(), other.Cat2);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.Cat3)) {
        this.Cat3 = data().deepCopy(fields()[10].schema(), other.Cat3);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.Cat4)) {
        this.Cat4 = data().deepCopy(fields()[11].schema(), other.Cat4);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.Cat5)) {
        this.Cat5 = data().deepCopy(fields()[12].schema(), other.Cat5);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.Cat6)) {
        this.Cat6 = data().deepCopy(fields()[13].schema(), other.Cat6);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.Cat7)) {
        this.Cat7 = data().deepCopy(fields()[14].schema(), other.Cat7);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.Cat8)) {
        this.Cat8 = data().deepCopy(fields()[15].schema(), other.Cat8);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.Cat9)) {
        this.Cat9 = data().deepCopy(fields()[16].schema(), other.Cat9);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.Cat10)) {
        this.Cat10 = data().deepCopy(fields()[17].schema(), other.Cat10);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.Cat11)) {
        this.Cat11 = data().deepCopy(fields()[18].schema(), other.Cat11);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.Cat12)) {
        this.Cat12 = data().deepCopy(fields()[19].schema(), other.Cat12);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.OrdCat)) {
        this.OrdCat = data().deepCopy(fields()[20].schema(), other.OrdCat);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.Var1)) {
        this.Var1 = data().deepCopy(fields()[21].schema(), other.Var1);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.Var2)) {
        this.Var2 = data().deepCopy(fields()[22].schema(), other.Var2);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.Var3)) {
        this.Var3 = data().deepCopy(fields()[23].schema(), other.Var3);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.Var4)) {
        this.Var4 = data().deepCopy(fields()[24].schema(), other.Var4);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.Var5)) {
        this.Var5 = data().deepCopy(fields()[25].schema(), other.Var5);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.Var6)) {
        this.Var6 = data().deepCopy(fields()[26].schema(), other.Var6);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.Var7)) {
        this.Var7 = data().deepCopy(fields()[27].schema(), other.Var7);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.Var8)) {
        this.Var8 = data().deepCopy(fields()[28].schema(), other.Var8);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.NVCat)) {
        this.NVCat = data().deepCopy(fields()[29].schema(), other.NVCat);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.NVVar1)) {
        this.NVVar1 = data().deepCopy(fields()[30].schema(), other.NVVar1);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.NVVar2)) {
        this.NVVar2 = data().deepCopy(fields()[31].schema(), other.NVVar2);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.NVVar3)) {
        this.NVVar3 = data().deepCopy(fields()[32].schema(), other.NVVar3);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.NVVar4)) {
        this.NVVar4 = data().deepCopy(fields()[33].schema(), other.NVVar4);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.Claim_Amount)) {
        this.Claim_Amount = data().deepCopy(fields()[34].schema(), other.Claim_Amount);
        fieldSetFlags()[34] = true;
      }
    }

    /** Gets the value of the 'Row_ID' field */
    public java.lang.Long getRowID() {
      return Row_ID;
    }
    
    /** Sets the value of the 'Row_ID' field */
    public org.rbisd.glm.allstate_kaggle.Builder setRowID(long value) {
      validate(fields()[0], value);
      this.Row_ID = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'Row_ID' field has been set */
    public boolean hasRowID() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'Row_ID' field */
    public org.rbisd.glm.allstate_kaggle.Builder clearRowID() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'Household_ID' field */
    public java.lang.Long getHouseholdID() {
      return Household_ID;
    }
    
    /** Sets the value of the 'Household_ID' field */
    public org.rbisd.glm.allstate_kaggle.Builder setHouseholdID(long value) {
      validate(fields()[1], value);
      this.Household_ID = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'Household_ID' field has been set */
    public boolean hasHouseholdID() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'Household_ID' field */
    public org.rbisd.glm.allstate_kaggle.Builder clearHouseholdID() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'Vehicle' field */
    public java.lang.Long getVehicle() {
      return Vehicle;
    }
    
    /** Sets the value of the 'Vehicle' field */
    public org.rbisd.glm.allstate_kaggle.Builder setVehicle(long value) {
      validate(fields()[2], value);
      this.Vehicle = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'Vehicle' field has been set */
    public boolean hasVehicle() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'Vehicle' field */
    public org.rbisd.glm.allstate_kaggle.Builder clearVehicle() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'Calendar_Year' field */
    public java.lang.Integer getCalendarYear() {
      return Calendar_Year;
    }
    
    /** Sets the value of the 'Calendar_Year' field */
    public org.rbisd.glm.allstate_kaggle.Builder setCalendarYear(int value) {
      validate(fields()[3], value);
      this.Calendar_Year = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'Calendar_Year' field has been set */
    public boolean hasCalendarYear() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'Calendar_Year' field */
    public org.rbisd.glm.allstate_kaggle.Builder clearCalendarYear() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'Model_Year' field */
    public java.lang.Integer getModelYear() {
      return Model_Year;
    }
    
    /** Sets the value of the 'Model_Year' field */
    public org.rbisd.glm.allstate_kaggle.Builder setModelYear(int value) {
      validate(fields()[4], value);
      this.Model_Year = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'Model_Year' field has been set */
    public boolean hasModelYear() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'Model_Year' field */
    public org.rbisd.glm.allstate_kaggle.Builder clearModelYear() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'Blind_Make' field */
    public java.lang.CharSequence getBlindMake() {
      return Blind_Make;
    }
    
    /** Sets the value of the 'Blind_Make' field */
    public org.rbisd.glm.allstate_kaggle.Builder setBlindMake(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.Blind_Make = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'Blind_Make' field has been set */
    public boolean hasBlindMake() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'Blind_Make' field */
    public org.rbisd.glm.allstate_kaggle.Builder clearBlindMake() {
      Blind_Make = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'Blind_Model' field */
    public java.lang.CharSequence getBlindModel() {
      return Blind_Model;
    }
    
    /** Sets the value of the 'Blind_Model' field */
    public org.rbisd.glm.allstate_kaggle.Builder setBlindModel(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.Blind_Model = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'Blind_Model' field has been set */
    public boolean hasBlindModel() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'Blind_Model' field */
    public org.rbisd.glm.allstate_kaggle.Builder clearBlindModel() {
      Blind_Model = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'Blind_Submodel' field */
    public java.lang.CharSequence getBlindSubmodel() {
      return Blind_Submodel;
    }
    
    /** Sets the value of the 'Blind_Submodel' field */
    public org.rbisd.glm.allstate_kaggle.Builder setBlindSubmodel(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.Blind_Submodel = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'Blind_Submodel' field has been set */
    public boolean hasBlindSubmodel() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'Blind_Submodel' field */
    public org.rbisd.glm.allstate_kaggle.Builder clearBlindSubmodel() {
      Blind_Submodel = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'Cat1' field */
    public java.lang.CharSequence getCat1() {
      return Cat1;
    }
    
    /** Sets the value of the 'Cat1' field */
    public org.rbisd.glm.allstate_kaggle.Builder setCat1(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.Cat1 = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'Cat1' field has been set */
    public boolean hasCat1() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'Cat1' field */
    public org.rbisd.glm.allstate_kaggle.Builder clearCat1() {
      Cat1 = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'Cat2' field */
    public java.lang.CharSequence getCat2() {
      return Cat2;
    }
    
    /** Sets the value of the 'Cat2' field */
    public org.rbisd.glm.allstate_kaggle.Builder setCat2(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.Cat2 = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'Cat2' field has been set */
    public boolean hasCat2() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'Cat2' field */
    public org.rbisd.glm.allstate_kaggle.Builder clearCat2() {
      Cat2 = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'Cat3' field */
    public java.lang.CharSequence getCat3() {
      return Cat3;
    }
    
    /** Sets the value of the 'Cat3' field */
    public org.rbisd.glm.allstate_kaggle.Builder setCat3(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.Cat3 = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'Cat3' field has been set */
    public boolean hasCat3() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'Cat3' field */
    public org.rbisd.glm.allstate_kaggle.Builder clearCat3() {
      Cat3 = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'Cat4' field */
    public java.lang.CharSequence getCat4() {
      return Cat4;
    }
    
    /** Sets the value of the 'Cat4' field */
    public org.rbisd.glm.allstate_kaggle.Builder setCat4(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.Cat4 = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'Cat4' field has been set */
    public boolean hasCat4() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'Cat4' field */
    public org.rbisd.glm.allstate_kaggle.Builder clearCat4() {
      Cat4 = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'Cat5' field */
    public java.lang.CharSequence getCat5() {
      return Cat5;
    }
    
    /** Sets the value of the 'Cat5' field */
    public org.rbisd.glm.allstate_kaggle.Builder setCat5(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.Cat5 = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    
    /** Checks whether the 'Cat5' field has been set */
    public boolean hasCat5() {
      return fieldSetFlags()[12];
    }
    
    /** Clears the value of the 'Cat5' field */
    public org.rbisd.glm.allstate_kaggle.Builder clearCat5() {
      Cat5 = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /** Gets the value of the 'Cat6' field */
    public java.lang.CharSequence getCat6() {
      return Cat6;
    }
    
    /** Sets the value of the 'Cat6' field */
    public org.rbisd.glm.allstate_kaggle.Builder setCat6(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.Cat6 = value;
      fieldSetFlags()[13] = true;
      return this; 
    }
    
    /** Checks whether the 'Cat6' field has been set */
    public boolean hasCat6() {
      return fieldSetFlags()[13];
    }
    
    /** Clears the value of the 'Cat6' field */
    public org.rbisd.glm.allstate_kaggle.Builder clearCat6() {
      Cat6 = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /** Gets the value of the 'Cat7' field */
    public java.lang.CharSequence getCat7() {
      return Cat7;
    }
    
    /** Sets the value of the 'Cat7' field */
    public org.rbisd.glm.allstate_kaggle.Builder setCat7(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.Cat7 = value;
      fieldSetFlags()[14] = true;
      return this; 
    }
    
    /** Checks whether the 'Cat7' field has been set */
    public boolean hasCat7() {
      return fieldSetFlags()[14];
    }
    
    /** Clears the value of the 'Cat7' field */
    public org.rbisd.glm.allstate_kaggle.Builder clearCat7() {
      Cat7 = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /** Gets the value of the 'Cat8' field */
    public java.lang.CharSequence getCat8() {
      return Cat8;
    }
    
    /** Sets the value of the 'Cat8' field */
    public org.rbisd.glm.allstate_kaggle.Builder setCat8(java.lang.CharSequence value) {
      validate(fields()[15], value);
      this.Cat8 = value;
      fieldSetFlags()[15] = true;
      return this; 
    }
    
    /** Checks whether the 'Cat8' field has been set */
    public boolean hasCat8() {
      return fieldSetFlags()[15];
    }
    
    /** Clears the value of the 'Cat8' field */
    public org.rbisd.glm.allstate_kaggle.Builder clearCat8() {
      Cat8 = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /** Gets the value of the 'Cat9' field */
    public java.lang.CharSequence getCat9() {
      return Cat9;
    }
    
    /** Sets the value of the 'Cat9' field */
    public org.rbisd.glm.allstate_kaggle.Builder setCat9(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.Cat9 = value;
      fieldSetFlags()[16] = true;
      return this; 
    }
    
    /** Checks whether the 'Cat9' field has been set */
    public boolean hasCat9() {
      return fieldSetFlags()[16];
    }
    
    /** Clears the value of the 'Cat9' field */
    public org.rbisd.glm.allstate_kaggle.Builder clearCat9() {
      Cat9 = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /** Gets the value of the 'Cat10' field */
    public java.lang.CharSequence getCat10() {
      return Cat10;
    }
    
    /** Sets the value of the 'Cat10' field */
    public org.rbisd.glm.allstate_kaggle.Builder setCat10(java.lang.CharSequence value) {
      validate(fields()[17], value);
      this.Cat10 = value;
      fieldSetFlags()[17] = true;
      return this; 
    }
    
    /** Checks whether the 'Cat10' field has been set */
    public boolean hasCat10() {
      return fieldSetFlags()[17];
    }
    
    /** Clears the value of the 'Cat10' field */
    public org.rbisd.glm.allstate_kaggle.Builder clearCat10() {
      Cat10 = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /** Gets the value of the 'Cat11' field */
    public java.lang.CharSequence getCat11() {
      return Cat11;
    }
    
    /** Sets the value of the 'Cat11' field */
    public org.rbisd.glm.allstate_kaggle.Builder setCat11(java.lang.CharSequence value) {
      validate(fields()[18], value);
      this.Cat11 = value;
      fieldSetFlags()[18] = true;
      return this; 
    }
    
    /** Checks whether the 'Cat11' field has been set */
    public boolean hasCat11() {
      return fieldSetFlags()[18];
    }
    
    /** Clears the value of the 'Cat11' field */
    public org.rbisd.glm.allstate_kaggle.Builder clearCat11() {
      Cat11 = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /** Gets the value of the 'Cat12' field */
    public java.lang.CharSequence getCat12() {
      return Cat12;
    }
    
    /** Sets the value of the 'Cat12' field */
    public org.rbisd.glm.allstate_kaggle.Builder setCat12(java.lang.CharSequence value) {
      validate(fields()[19], value);
      this.Cat12 = value;
      fieldSetFlags()[19] = true;
      return this; 
    }
    
    /** Checks whether the 'Cat12' field has been set */
    public boolean hasCat12() {
      return fieldSetFlags()[19];
    }
    
    /** Clears the value of the 'Cat12' field */
    public org.rbisd.glm.allstate_kaggle.Builder clearCat12() {
      Cat12 = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /** Gets the value of the 'OrdCat' field */
    public java.lang.Integer getOrdCat() {
      return OrdCat;
    }
    
    /** Sets the value of the 'OrdCat' field */
    public org.rbisd.glm.allstate_kaggle.Builder setOrdCat(int value) {
      validate(fields()[20], value);
      this.OrdCat = value;
      fieldSetFlags()[20] = true;
      return this; 
    }
    
    /** Checks whether the 'OrdCat' field has been set */
    public boolean hasOrdCat() {
      return fieldSetFlags()[20];
    }
    
    /** Clears the value of the 'OrdCat' field */
    public org.rbisd.glm.allstate_kaggle.Builder clearOrdCat() {
      fieldSetFlags()[20] = false;
      return this;
    }

    /** Gets the value of the 'Var1' field */
    public java.lang.Double getVar1() {
      return Var1;
    }
    
    /** Sets the value of the 'Var1' field */
    public org.rbisd.glm.allstate_kaggle.Builder setVar1(double value) {
      validate(fields()[21], value);
      this.Var1 = value;
      fieldSetFlags()[21] = true;
      return this; 
    }
    
    /** Checks whether the 'Var1' field has been set */
    public boolean hasVar1() {
      return fieldSetFlags()[21];
    }
    
    /** Clears the value of the 'Var1' field */
    public org.rbisd.glm.allstate_kaggle.Builder clearVar1() {
      fieldSetFlags()[21] = false;
      return this;
    }

    /** Gets the value of the 'Var2' field */
    public java.lang.Double getVar2() {
      return Var2;
    }
    
    /** Sets the value of the 'Var2' field */
    public org.rbisd.glm.allstate_kaggle.Builder setVar2(double value) {
      validate(fields()[22], value);
      this.Var2 = value;
      fieldSetFlags()[22] = true;
      return this; 
    }
    
    /** Checks whether the 'Var2' field has been set */
    public boolean hasVar2() {
      return fieldSetFlags()[22];
    }
    
    /** Clears the value of the 'Var2' field */
    public org.rbisd.glm.allstate_kaggle.Builder clearVar2() {
      fieldSetFlags()[22] = false;
      return this;
    }

    /** Gets the value of the 'Var3' field */
    public java.lang.Double getVar3() {
      return Var3;
    }
    
    /** Sets the value of the 'Var3' field */
    public org.rbisd.glm.allstate_kaggle.Builder setVar3(double value) {
      validate(fields()[23], value);
      this.Var3 = value;
      fieldSetFlags()[23] = true;
      return this; 
    }
    
    /** Checks whether the 'Var3' field has been set */
    public boolean hasVar3() {
      return fieldSetFlags()[23];
    }
    
    /** Clears the value of the 'Var3' field */
    public org.rbisd.glm.allstate_kaggle.Builder clearVar3() {
      fieldSetFlags()[23] = false;
      return this;
    }

    /** Gets the value of the 'Var4' field */
    public java.lang.Double getVar4() {
      return Var4;
    }
    
    /** Sets the value of the 'Var4' field */
    public org.rbisd.glm.allstate_kaggle.Builder setVar4(double value) {
      validate(fields()[24], value);
      this.Var4 = value;
      fieldSetFlags()[24] = true;
      return this; 
    }
    
    /** Checks whether the 'Var4' field has been set */
    public boolean hasVar4() {
      return fieldSetFlags()[24];
    }
    
    /** Clears the value of the 'Var4' field */
    public org.rbisd.glm.allstate_kaggle.Builder clearVar4() {
      fieldSetFlags()[24] = false;
      return this;
    }

    /** Gets the value of the 'Var5' field */
    public java.lang.Double getVar5() {
      return Var5;
    }
    
    /** Sets the value of the 'Var5' field */
    public org.rbisd.glm.allstate_kaggle.Builder setVar5(double value) {
      validate(fields()[25], value);
      this.Var5 = value;
      fieldSetFlags()[25] = true;
      return this; 
    }
    
    /** Checks whether the 'Var5' field has been set */
    public boolean hasVar5() {
      return fieldSetFlags()[25];
    }
    
    /** Clears the value of the 'Var5' field */
    public org.rbisd.glm.allstate_kaggle.Builder clearVar5() {
      fieldSetFlags()[25] = false;
      return this;
    }

    /** Gets the value of the 'Var6' field */
    public java.lang.Double getVar6() {
      return Var6;
    }
    
    /** Sets the value of the 'Var6' field */
    public org.rbisd.glm.allstate_kaggle.Builder setVar6(double value) {
      validate(fields()[26], value);
      this.Var6 = value;
      fieldSetFlags()[26] = true;
      return this; 
    }
    
    /** Checks whether the 'Var6' field has been set */
    public boolean hasVar6() {
      return fieldSetFlags()[26];
    }
    
    /** Clears the value of the 'Var6' field */
    public org.rbisd.glm.allstate_kaggle.Builder clearVar6() {
      fieldSetFlags()[26] = false;
      return this;
    }

    /** Gets the value of the 'Var7' field */
    public java.lang.Double getVar7() {
      return Var7;
    }
    
    /** Sets the value of the 'Var7' field */
    public org.rbisd.glm.allstate_kaggle.Builder setVar7(double value) {
      validate(fields()[27], value);
      this.Var7 = value;
      fieldSetFlags()[27] = true;
      return this; 
    }
    
    /** Checks whether the 'Var7' field has been set */
    public boolean hasVar7() {
      return fieldSetFlags()[27];
    }
    
    /** Clears the value of the 'Var7' field */
    public org.rbisd.glm.allstate_kaggle.Builder clearVar7() {
      fieldSetFlags()[27] = false;
      return this;
    }

    /** Gets the value of the 'Var8' field */
    public java.lang.Double getVar8() {
      return Var8;
    }
    
    /** Sets the value of the 'Var8' field */
    public org.rbisd.glm.allstate_kaggle.Builder setVar8(double value) {
      validate(fields()[28], value);
      this.Var8 = value;
      fieldSetFlags()[28] = true;
      return this; 
    }
    
    /** Checks whether the 'Var8' field has been set */
    public boolean hasVar8() {
      return fieldSetFlags()[28];
    }
    
    /** Clears the value of the 'Var8' field */
    public org.rbisd.glm.allstate_kaggle.Builder clearVar8() {
      fieldSetFlags()[28] = false;
      return this;
    }

    /** Gets the value of the 'NVCat' field */
    public java.lang.CharSequence getNVCat() {
      return NVCat;
    }
    
    /** Sets the value of the 'NVCat' field */
    public org.rbisd.glm.allstate_kaggle.Builder setNVCat(java.lang.CharSequence value) {
      validate(fields()[29], value);
      this.NVCat = value;
      fieldSetFlags()[29] = true;
      return this; 
    }
    
    /** Checks whether the 'NVCat' field has been set */
    public boolean hasNVCat() {
      return fieldSetFlags()[29];
    }
    
    /** Clears the value of the 'NVCat' field */
    public org.rbisd.glm.allstate_kaggle.Builder clearNVCat() {
      NVCat = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /** Gets the value of the 'NVVar1' field */
    public java.lang.Double getNVVar1() {
      return NVVar1;
    }
    
    /** Sets the value of the 'NVVar1' field */
    public org.rbisd.glm.allstate_kaggle.Builder setNVVar1(double value) {
      validate(fields()[30], value);
      this.NVVar1 = value;
      fieldSetFlags()[30] = true;
      return this; 
    }
    
    /** Checks whether the 'NVVar1' field has been set */
    public boolean hasNVVar1() {
      return fieldSetFlags()[30];
    }
    
    /** Clears the value of the 'NVVar1' field */
    public org.rbisd.glm.allstate_kaggle.Builder clearNVVar1() {
      fieldSetFlags()[30] = false;
      return this;
    }

    /** Gets the value of the 'NVVar2' field */
    public java.lang.Double getNVVar2() {
      return NVVar2;
    }
    
    /** Sets the value of the 'NVVar2' field */
    public org.rbisd.glm.allstate_kaggle.Builder setNVVar2(double value) {
      validate(fields()[31], value);
      this.NVVar2 = value;
      fieldSetFlags()[31] = true;
      return this; 
    }
    
    /** Checks whether the 'NVVar2' field has been set */
    public boolean hasNVVar2() {
      return fieldSetFlags()[31];
    }
    
    /** Clears the value of the 'NVVar2' field */
    public org.rbisd.glm.allstate_kaggle.Builder clearNVVar2() {
      fieldSetFlags()[31] = false;
      return this;
    }

    /** Gets the value of the 'NVVar3' field */
    public java.lang.Double getNVVar3() {
      return NVVar3;
    }
    
    /** Sets the value of the 'NVVar3' field */
    public org.rbisd.glm.allstate_kaggle.Builder setNVVar3(double value) {
      validate(fields()[32], value);
      this.NVVar3 = value;
      fieldSetFlags()[32] = true;
      return this; 
    }
    
    /** Checks whether the 'NVVar3' field has been set */
    public boolean hasNVVar3() {
      return fieldSetFlags()[32];
    }
    
    /** Clears the value of the 'NVVar3' field */
    public org.rbisd.glm.allstate_kaggle.Builder clearNVVar3() {
      fieldSetFlags()[32] = false;
      return this;
    }

    /** Gets the value of the 'NVVar4' field */
    public java.lang.Double getNVVar4() {
      return NVVar4;
    }
    
    /** Sets the value of the 'NVVar4' field */
    public org.rbisd.glm.allstate_kaggle.Builder setNVVar4(double value) {
      validate(fields()[33], value);
      this.NVVar4 = value;
      fieldSetFlags()[33] = true;
      return this; 
    }
    
    /** Checks whether the 'NVVar4' field has been set */
    public boolean hasNVVar4() {
      return fieldSetFlags()[33];
    }
    
    /** Clears the value of the 'NVVar4' field */
    public org.rbisd.glm.allstate_kaggle.Builder clearNVVar4() {
      fieldSetFlags()[33] = false;
      return this;
    }

    /** Gets the value of the 'Claim_Amount' field */
    public java.lang.Double getClaimAmount() {
      return Claim_Amount;
    }
    
    /** Sets the value of the 'Claim_Amount' field */
    public org.rbisd.glm.allstate_kaggle.Builder setClaimAmount(double value) {
      validate(fields()[34], value);
      this.Claim_Amount = value;
      fieldSetFlags()[34] = true;
      return this; 
    }
    
    /** Checks whether the 'Claim_Amount' field has been set */
    public boolean hasClaimAmount() {
      return fieldSetFlags()[34];
    }
    
    /** Clears the value of the 'Claim_Amount' field */
    public org.rbisd.glm.allstate_kaggle.Builder clearClaimAmount() {
      fieldSetFlags()[34] = false;
      return this;
    }

    @Override
    public allstate_kaggle build() {
      try {
        allstate_kaggle record = new allstate_kaggle();
        record.Row_ID = fieldSetFlags()[0] ? this.Row_ID : (java.lang.Long) defaultValue(fields()[0]);
        record.Household_ID = fieldSetFlags()[1] ? this.Household_ID : (java.lang.Long) defaultValue(fields()[1]);
        record.Vehicle = fieldSetFlags()[2] ? this.Vehicle : (java.lang.Long) defaultValue(fields()[2]);
        record.Calendar_Year = fieldSetFlags()[3] ? this.Calendar_Year : (java.lang.Integer) defaultValue(fields()[3]);
        record.Model_Year = fieldSetFlags()[4] ? this.Model_Year : (java.lang.Integer) defaultValue(fields()[4]);
        record.Blind_Make = fieldSetFlags()[5] ? this.Blind_Make : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.Blind_Model = fieldSetFlags()[6] ? this.Blind_Model : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.Blind_Submodel = fieldSetFlags()[7] ? this.Blind_Submodel : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.Cat1 = fieldSetFlags()[8] ? this.Cat1 : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.Cat2 = fieldSetFlags()[9] ? this.Cat2 : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.Cat3 = fieldSetFlags()[10] ? this.Cat3 : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.Cat4 = fieldSetFlags()[11] ? this.Cat4 : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.Cat5 = fieldSetFlags()[12] ? this.Cat5 : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.Cat6 = fieldSetFlags()[13] ? this.Cat6 : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.Cat7 = fieldSetFlags()[14] ? this.Cat7 : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.Cat8 = fieldSetFlags()[15] ? this.Cat8 : (java.lang.CharSequence) defaultValue(fields()[15]);
        record.Cat9 = fieldSetFlags()[16] ? this.Cat9 : (java.lang.CharSequence) defaultValue(fields()[16]);
        record.Cat10 = fieldSetFlags()[17] ? this.Cat10 : (java.lang.CharSequence) defaultValue(fields()[17]);
        record.Cat11 = fieldSetFlags()[18] ? this.Cat11 : (java.lang.CharSequence) defaultValue(fields()[18]);
        record.Cat12 = fieldSetFlags()[19] ? this.Cat12 : (java.lang.CharSequence) defaultValue(fields()[19]);
        record.OrdCat = fieldSetFlags()[20] ? this.OrdCat : (java.lang.Integer) defaultValue(fields()[20]);
        record.Var1 = fieldSetFlags()[21] ? this.Var1 : (java.lang.Double) defaultValue(fields()[21]);
        record.Var2 = fieldSetFlags()[22] ? this.Var2 : (java.lang.Double) defaultValue(fields()[22]);
        record.Var3 = fieldSetFlags()[23] ? this.Var3 : (java.lang.Double) defaultValue(fields()[23]);
        record.Var4 = fieldSetFlags()[24] ? this.Var4 : (java.lang.Double) defaultValue(fields()[24]);
        record.Var5 = fieldSetFlags()[25] ? this.Var5 : (java.lang.Double) defaultValue(fields()[25]);
        record.Var6 = fieldSetFlags()[26] ? this.Var6 : (java.lang.Double) defaultValue(fields()[26]);
        record.Var7 = fieldSetFlags()[27] ? this.Var7 : (java.lang.Double) defaultValue(fields()[27]);
        record.Var8 = fieldSetFlags()[28] ? this.Var8 : (java.lang.Double) defaultValue(fields()[28]);
        record.NVCat = fieldSetFlags()[29] ? this.NVCat : (java.lang.CharSequence) defaultValue(fields()[29]);
        record.NVVar1 = fieldSetFlags()[30] ? this.NVVar1 : (java.lang.Double) defaultValue(fields()[30]);
        record.NVVar2 = fieldSetFlags()[31] ? this.NVVar2 : (java.lang.Double) defaultValue(fields()[31]);
        record.NVVar3 = fieldSetFlags()[32] ? this.NVVar3 : (java.lang.Double) defaultValue(fields()[32]);
        record.NVVar4 = fieldSetFlags()[33] ? this.NVVar4 : (java.lang.Double) defaultValue(fields()[33]);
        record.Claim_Amount = fieldSetFlags()[34] ? this.Claim_Amount : (java.lang.Double) defaultValue(fields()[34]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
